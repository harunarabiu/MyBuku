name: Deploy mybukuapp to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Application to Elastic Beanstalk
    runs-on: ubuntu-latest

    env:
      ELASTIC_BEANSTALK_NAME: mybukuapp
      ELASTIC_BEANSTALK_ENV_NAME: MybukuappEnvironment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, mysqli, pdo_mysql, curl
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: none

      - name: Install Composer Dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Package Application
        run: |
          ZIP_NAME="mybukuapp-${{ github.run_number }}-${{ github.run_id }}.zip"
          zip -r $ZIP_NAME . -x "*.git*" ".github/*" "tests/*" "*.env" "*.zip" "node_modules/*"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Upload to S3
        run: |
          aws s3 cp $ZIP_NAME s3://mybukustore/$ZIP_NAME

      - name: Create Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name $ELASTIC_BEANSTALK_NAME \
            --version-label "mybukuapp-version-${{ github.run_number }}-${{ github.run_id }}" \
            --source-bundle S3Bucket="mybukustore",S3Key="$ZIP_NAME"

      - name: Update Environment
        run: |
          aws elasticbeanstalk update-environment \
            --application-name $ELASTIC_BEANSTALK_NAME \
            --environment-name $ELASTIC_BEANSTALK_ENV_NAME \
            --version-label "mybukuapp-version-${{ github.run_number }}-${{ github.run_id }}" \
            --option-settings \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_HOST,Value=${{ secrets.DB_HOST }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_USER,Value=${{ secrets.DB_USER }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PASS,Value=${{ secrets.DB_PASS }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_NAME,Value=${{ secrets.DB_NAME }}

      - name: Wait for Environment Update
        run: |
          aws elasticbeanstalk wait environment-updated \
            --application-name $ELASTIC_BEANSTALK_NAME \
            --environment-name $ELASTIC_BEANSTALK_ENV_NAME

      - name: Cleanup
        run: rm -f ${{ env.ZIP_NAME }}
